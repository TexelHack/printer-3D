class Letras:
	aVar = ['  ████╗  ', ' ██╔═██╗ ', '██╔╝ ╚██╗', '████████║', '██╔═══██║', '╚═╝   ╚═╝']
	bVar = ['█████╗ ', '██╔═██╗', '█████╔╝', '██╔═██╗', '█████╔╝', '╚════╝ ']
	cVar = ['  ████╗ ', ' ██╔═██╗', '██╔╝ ╚═╝', '╚██╗ ██╗', ' ╚████╔╝', '  ╚═══╝ ']
	dVar = ['████╗  ', '██╔═██╗', '██║ ██║', '██║ ██║', '████╔═╝', '╚═══╝  ']
	eVar = ['██████╗', '██╔═══╝', '████╗  ', '██╔═╝  ', '██████╗', '╚═════╝']
	fVar = ['██████╗', '██╔═══╝', '████╗  ', '██╔═╝  ', '██║    ', '╚═╝    ']
	gVar = [' █████╗ ',  '██╔═══╝ ',  '██║ ██╗ ',  '██║ ╚██╗',  '╚█████╔╝',  ' ╚════╝ ']
	hVar = ['██╗   ██╗', '██║   ██║', '████████║', '██╔═══██║', '██║   ██║', '╚═╝   ╚═╝']
	iVar = ['██╗', '██║', '██║', '██║', '██║', '╚═╝']
	jVar = ['██╗    ', '██║    ', '██║    ', '██║ ██╗', '╚████╔╝', ' ╚═══╝ ']
	kVar = ['██╗ ██╗', '██║██╔╝', '████╔╝ ', '██╔██╗ ', '██║╚██╗', '╚═╝ ╚═╝']
	lVar = ['██╗    ', '██║    ', '██║    ', '██║    ', '██████╗', '╚═════╝']
	mVar = ['████    ████╗', '██╔██╗ ██╔██║', '██║██║ ██║██║', '██║╚═██╔═╝██║', '██║  ╚═╝  ██║', '╚═╝       ╚═╝']
	nVar = ['████╗ ██╗', '██╔██╗██║', '██║██║██║', '██║██║██║', '██║╚████║', '╚═╝ ╚═══╝']
	oVar = ['  ████╗  ', ' ██╔═██╗ ', '██╔╝ ╚██╗', '╚██╗ ██╔╝', ' ╚████╔╝ ', '  ╚═══╝  ']
	pVar = ['█████╗ ', '██╔═██╗', '█████╔╝', '██╔══╝ ', '██║    ', '╚═╝    ']
	rVar = ['█████╗ ', '██╔═██╗', '█████╔╝', '██╔═██╗', '██║ ██║', '╚═╝ ╚═╝']
	sVar = [' ████╗ ', '██╔══╝ ', '╚████╗ ', ' ╚══██╗', ' ████╔╝', ' ╚═══╝ ']
	tVar = ['████████╗', '╚══██╔══╝', '   ██║   ', '   ██║   ', '   ██║   ', '   ╚═╝   ']
	uVar = ['██╗   ██╗', '██║   ██║', '██║   ██║', '██║   ██║', '╚██████╔╝', ' ╚═════╝ ']
	vVar = ['██╗   ██╗', '██║   ██║', '██║   ██║', '╚██╗ ██╔╝', ' ╚═██╔═╝ ', '   ╚═╝   ']
	wVar = ['██╗   ███╗   ██╗', '██║   ███║   ██║', '██║   ███║   ██║', '╚██╗ ██╔██╗ ██╔╝', ' ╚═██╔═╝╚═██╔═╝ ', '   ╚═╝    ╚═╝   ']
	xVar = ['██╗  ██╗', '╚██╗██╔╝', ' ╚███╔╝ ', ' ██╔██╗ ', '██╔╝╚██╗', '╚═╝  ╚═╝']
	yVar = ['██╗ ██╗', '██║ ██║', '╚═██╔═╝', '  ██║  ', '  ██║  ', '  ╚═╝  ']
	zVar = ['███████╗', '╚════██║', ' █████╔╝', '██╔═══╝ ', '███████╗', '╚══════╝']
	n1Var = [' ███╗  ', ' ╚██║  ', '  ██║  ', '  ██║  ', '██████╗', '╚═════╝']
	n2Var = ['██████╗', '╚═══██║', '██████║', '██╔═══╝', '██████╗', '╚═════╝']
	n3Var = ['██████╗', '╚═══██║', '██████║', '╚═══██║', '██████║', '╚═════╝']
	n4Var = ['██╗ ██╗', '██║ ██║', '██████║', '╚═══██║', '    ██║', '    ╚═╝']
	n5Var = ['██████╗', '██╔═══╝', '██████╗', '╚═══██║', '██████║', '╚═════╝']
	n6Var = ['██████╗', '██╔═══╝', '██████╗', '██══██║', '██████║', '╚═════╝']
	n7Var = ['██████╗', '╚═══██║', '    ██║', '    ██║', '    ██║', '    ╚═╝']
	n8Var = ['██████╗', '██╔═██║', '██████║', '██╔═██║', '██████║', '╚═════╝']
	n9Var = ['██████╗', '██╔═██║', '██████║', '╚═══██║', '██████║', '╚═════╝']
	n0Var = ['██████╗', '██╔═██║', '██║ ██║', '██║ ██║', '██████║', '╚═════╝']

def p3d(text):
	comp1 = ''
	comp2 = ''
	comp3 = ''
	comp4 = ''
	comp5 = ''
	comp6 = ''
	for i in text.lower():
		try:
			int(i)
			comp1 = eval("comp1 + Letras.n" + i + "Var[0]")
			comp2 = eval("comp2 + Letras.n" + i + "Var[1]")
			comp3 = eval("comp3 + Letras.n" + i + "Var[2]")
			comp4 = eval("comp4 + Letras.n" + i + "Var[3]")
			comp5 = eval("comp5 + Letras.n" + i + "Var[4]")
			comp6 = eval("comp6 + Letras.n" + i + "Var[5]")
		except ValueError:
			if i == ' ':
				comp1 += '  ' 
				comp2 += '  ' 
				comp3 += '  ' 
				comp4 += '  ' 
				comp5 += '  ' 
				comp6 += '  ' 
			else:
				comp1 = eval("comp1 + Letras." + i + "Var[0]")
				comp2 = eval("comp2 + Letras." + i + "Var[1]")
				comp3 = eval("comp3 + Letras." + i + "Var[2]")
				comp4 = eval("comp4 + Letras." + i + "Var[3]")
				comp5 = eval("comp5 + Letras." + i + "Var[4]")
				comp6 = eval("comp6 + Letras." + i + "Var[5]")

	print('\n' + comp1 + '\n' + comp2 + '\n' + comp3 + '\n' + comp4 + '\n' + comp5 + '\n' + comp6 + '\n')

def main():
	from subprocess import Popen
	from platform import system
	Popen('cls' if system() == 'Windows' else 'clean', shell=True)
	sleep(0.1)
	print('\n')
	print('█████╗ █████╗ ██╗████╗ ██╗████████╗██████╗█████╗       ██████╗ ████╗  ')
	sleep(0.1)
	print('██╔═██╗██╔═██╗██║██╔██╗██║╚══██╔══╝██╔═══╝██╔═██╗      ╚═══███╗██╔═██╗')
	sleep(0.1)
	print('█████╔╝█████╔╝██║██║██║██║   ██║   ████╗  █████╔╝       █████╔╝██║ ██║')
	sleep(0.1)
	print('██╔══╝ ██╔═██╗██║██║██║██║   ██║   ██╔═╝  ██╔═██╗       ╚══███╗██║ ██║')
	sleep(0.1)
	print('██║    ██║ ██║██║██║╚████║   ██║   ██████╗██║ ██║      ██████╔╝████╔═╝')
	sleep(0.1)
	print('╚═╝    ╚═╝ ╚═╝╚═╝╚═╝ ╚═══╝   ╚═╝   ╚═════╝╚═╝ ╚═╝      ╚═════╝ ╚═══╝  ')
	sleep(0.1)
	print('======================================================================')
	sleep(0.1)
	p3d(input(')○> '))

if __name__ == '__main__':
	import sys
	from time import sleep
	if sys.argv[1:]:
		p3d(sys.argv[1])
		try:
			p3d(sys.argv[2])
			p3d(sys.argv[3])
			p3d(sys.argv[4])
			p3d(sys.argv[5])
			p3d(sys.argv[6])
			p3d(sys.argv[7])
			p3d(sys.argv[8])
			p3d(sys.argv[9])
		except IndexError:
			pass
		if sys.argv[10:]:
			print('Se ha exedido del numero de palabras | max = 9')
		else:
			pass
	else:
		from platform import python_version
		if python_version()[0] == '3':
			main()
		else:
			print('Actualise el python ha la version 3')
			sleep(3)
			main()
